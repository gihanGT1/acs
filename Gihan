# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1niMnTaTdalFFbbuWZzGU74eZZ8SyOopM
"""

!pip install -U scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

distance = ctrl.Antecedent(np.arange(0,10,1), 'Distance') #input
obSize = ctrl.Antecedent(np.arange(0,10,1), 'Object Size')
speed = ctrl.Consequent(np.arange(0,10,1), 'Speed') #output

#distance.automf(3)

#distance.view()

distance['very close'] = fuzz.trimf(distance.universe, [0,0,3])
distance['medium']= fuzz.trimf(distance.universe, [0,3,6])
distance['far']= fuzz.trimf(distance.universe, [3,6,90000])

distance.view()

obSize['small'] = fuzz.trapmf(obSize.universe, (0,1,3,4))
obSize['medium'] = fuzz.trapmf(obSize.universe, (3,5,7,9))

obSize.view()

speed['slow'] = fuzz.trimf(distance.universe,(0,0,5))
speed['medium'] = fuzz.trimf(distance.universe,(0,5,10))
speed['fast'] = fuzz.trimf(distance.universe,(5,9,10000))

speed.view()
#

rule1 = ctrl.Rule(obSize['small'] & distance['far'], speed['fast'])
rule2 = ctrl.Rule(obSize['medium'] & distance['very close'], speed['slow'])

rule1.view()

speed_ctrl = ctrl.ControlSystem([rule1,rule2])

speeding = ctrl.ControlSystemSimulation(speed_ctrl)

speeding.input['Distance'] = 9
speeding.input['Object Size'] = 2

speeding.compute()

print(speeding.output['Speed'])

speed.view(sim=speeding)